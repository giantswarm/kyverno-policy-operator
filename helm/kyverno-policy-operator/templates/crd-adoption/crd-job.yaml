apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "kyverno-policy-operator.crdAdoption" . }}
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # create hook dependencies in the right order
    "helm.sh/hook-weight": "-1"
    {{- include "kyverno-policy-operator.crdAdoptionAnnotations" . | nindent 4 }}
  labels:
    app.kubernetes.io/component: {{ include "kyverno-policy-operator.crdAdoption" . | quote }}
    {{- include "labels.selector" . | nindent 4 }}
    role: {{ include "kyverno-policy-operator.crdAdoptionSelector" . | quote }}
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: {{ include "kyverno-policy-operator.crdAdoption" . | quote }}
        {{- include "labels.selector" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "kyverno-policy-operator.crdAdoption" . }}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      containers:
      - name: kubectl
        image: "{{ default .Values.image.registry (include "global.imageRegistry" . ) }}/giantswarm/docker-kubectl:{{ .Values.crds.image.tag }}"
        command:
        - sh
        - -c
        - |
          set -o errexit ; set -o xtrace ; set -o nounset

          # piping stderr to stdout means kubectl's errors are surfaced
          # in the pod's logs.
          kubectl label crd policyexceptions.policy.giantswarm.io "app.kubernetes.io/managed-by=Helm"
          kubectl annotate crd policyexceptions.policy.giantswarm.io "meta.helm.sh/release-name=policy-meta-operator"
          kubectl annotate crd policyexceptions.policy.giantswarm.io "meta.helm.sh/release-namespace=policy-system"
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          capabilities:
            drop:
            - ALL
        resources: {{- toYaml .Values.crds.resources | nindent 10 }}
      restartPolicy: Never
  backoffLimit: 4
